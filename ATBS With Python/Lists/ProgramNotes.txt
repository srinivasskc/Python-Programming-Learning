Lists:

Lists contains Values.
It contains multiple values in an ordered sequence.
Values inside list are sometimes called items 

Values are listed inside [] separated by commas delimited.

>>> ['Cat', 'rat', 'Dog', 'Elephant', 'Girafee']
['Cat', 'rat', 'Dog', 'Elephant', 'Girafee']
>>> spam = ['Cat', 'rat', 'Dog', 'Elephant', 'Girafee']
>>> spam
['Cat', 'rat', 'Dog', 'Elephant', 'Girafee']
>>> 

Index in List starts with Zero Index.
>>> spam[0]
'Cat'
>>> spam[2]
'Dog'
>>> spam[5]
Traceback (most recent call last):
  File "<pyshell#5>", line 1, in <module>
    spam[5]
IndexError: list index out of range
>>> spam[4]
'Girafee'
>>> 


Lists of Lists:
The values in lists of lists can be accessed using multiple indexes.

>>> 
>>> spam = [['cat','bat'],[10,20,30,40,50]]
>>> spam
[['cat', 'bat'], [10, 20, 30, 40, 50]]
>>> spam[0]
['cat', 'bat']
>>> spam[1]
[10, 20, 30, 40, 50]
>>> spam[0][0]
'cat'
>>> spam[0][1]
'bat'
>>> spam[1][0]
10
>>> spam[1][1]
20
>>> 


Negative Index:
The negative value -1 refers to last index in the list
The negative value -2 refers to second to last index in the list.

>>> spam
[['cat', 'bat'], [10, 20, 30, 40, 50]]
>>> spam[-1]
[10, 20, 30, 40, 50]
>>> spam[-2]
['cat', 'bat']
>>> spam[-1][-1]
50
>>> spam[-1][-2]
40
>>> spam[-2][-1]
'bat'
>>> 


Lists inside the expressions with an index.
spam
[['cat', 'bat'], [10, 20, 30, 40, 50]]
>>> spam[-1]
[10, 20, 30, 40, 50]
>>> spam[-2]
['cat', 'bat']
>>> 
>>> "The " + spam[-2][-1] + "is dangerous than " + spam[-2][-2]
'The batis dangerous than cat'
>>> "The " + spam[-2][-1] + " is dangerous than " + spam[-2][-2]
'The bat is dangerous than cat'
>>> 


Slice can get sevaral values from a list like an index.
Slice includes start index, but not include end index value.

>>> spam = ["cat", "bat", "elephant", "tiger"]
>>> spam
['cat', 'bat', 'elephant', 'tiger']
>>> spam[1:2]
['bat']
>>> spam[1:3]
['bat', 'elephant']
>>>


Index = Single Item in List
Slice = List of Values

Changing the Index Values from the List
spam = "Hello"
>>> spam
'Hello'
>>> spam = [10,20,30]
>>> spam[1] = "Hello"
>>> spam
[10, 'Hello', 30]
>>> spam[1:3] = ["Cat", "Dog", "Rat"]
>>> spam
[10, 'Cat', 'Dog', 'Rat']
>>> spam[3] = "Elephant"
>>> spam
[10, 'Cat', 'Dog', 'Elephant']
>>> 


We can leave first or last index in the slice.
By default first is zero index. Last is last index in the list - But ignoring the end index in slice.

>>> spam
[10, 'Cat', 'Dog', 'Elephant']
>>> spam[:2]
[10, 'Cat']
>>> spam[1:3]
['Cat', 'Dog']
>>> 


Delete the Value from the List
Del statement is like an unassignment statement. Opposite of assignment statement

>>> del spam[1]
>>> spam
[10, 'Dog', 'Elephant']
>>> del spam[2]
>>> spam
[10, 'Dog']
>>> 

Length of the list:

>>> len("Hello")
5
>>> spam
[10, 'Dog']
>>> len(spam)
2
>>> len([1,2,3])
3
>>> 


String Concatenation:

>>> "Hello " + "World"
'Hello World'
>>> 
>>> [1,2,3] + [4,5,6]
[1, 2, 3, 4, 5, 6]
>>> spam1 = [1,5,9]
>>> spam2 = [2,3,6]
>>> spam3 = spam1 + spam2
>>> spam3
[1, 5, 9, 2, 3, 6]
>>> 


String Replication:
spam3 * 3
[1, 5, 9, 2, 3, 6, 1, 5, 9, 2, 3, 6, 1, 5, 9, 2, 3, 6]
>>> 


String values as list of single character values.

>>> list("Hello")
['H', 'e', 'l', 'l', 'o']
>>> 


Boolean Results: in and not in - verify the value in the list.
>>> spam = ["Cat", "Rat", "Elephant", "Dog"]
>>> spam
['Cat', 'Rat', 'Elephant', 'Dog']
>>> "cat" in spam
False
>>> "Cat" in spam
True
>>> 
>>> "cat" not in spam
True
>>> 
